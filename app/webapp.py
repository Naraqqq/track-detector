import streamlit as st
from PIL import Image
from ..inference.predict import load_model, predict_image

st.set_page_config(page_title="Track Detector", page_icon="üß†", layout="centered")

st.title("üß≠ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Å–ª–µ–¥–æ–≤")
st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ –º–æ–¥–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –∫–ª–∞—Å—Å —Å–ª–µ–¥–∞.")

MODEL_PATH = "model/model_best.pth"
CLASS_NAMES = ['Bear', 'Bird', 'Cat', 'Dog', 'Leopard', 'Otter']

@st.cache_resource
def get_model():
    return load_model(MODEL_PATH)

model = get_model()

uploaded_file = st.file_uploader("üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)

    if st.button("üîç –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–ª–∞—Å—Å"):
        with st.spinner("–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..."):
            label, probs = predict_image(model, image, CLASS_NAMES)

        st.success(f"‚úÖ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å: {label}")

        if st.button("üìä –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤"):
            st.bar_chart(probs, x=CLASS_NAMES)